<?php

if ( !defined('AREA') )	{ die('Access denied');	}

if ($_SERVER['REQUEST_METHOD'] == 'POST') 
{
	set_time_limit(36000);
	
	if ($mode == 'generatescheduledtaskscript') 
	{
	    fn_start_scroller();
	    $myFile = "autorun-".time().".php";
	    $myFile = "autorun.php";
	    
        $fh = fopen(DIR_ADDONS."stagingsite/".$myFile, 'w') or die("Error: Cannot open '" . DIR_ADDONS."stagingsite/".$myFile . "' for writing, please check permissions.");
        fwrite($fh, "
            <?php
            /** AUTOGENERATED code. Do not manually edit!!! **/
            
            \$mode='createstagingsite';
            \$curl_connection = curl_init(\$_SERVER['SERVER_NAME'].\"/\".dirname(\$_SERVER['SCRIPT_NAME']).\"/addons/stagingsite/controllers/admin/stagingsite.php\");
    		curl_setopt(\$curl_connection, CURLOPT_CONNECTTIMEOUT, 30);
            curl_setopt(\$curl_connection, CURLOPT_USERAGENT, \"Mozilla/5.0 (Windows NT 6.1; rv:2.0) Gecko/20100101 Firefox/4.0 FirePHP/0.5\");
            curl_setopt(\$curl_connection, CURLOPT_RETURNTRANSFER, true);
            curl_setopt(\$curl_connection, CURLOPT_AUTOREFERER, true);
            curl_setopt(\$curl_connection, CURLOPT_FOLLOWLOCATION, true);
            curl_setopt(\$curl_connection, CURLOPT_SSL_VERIFYPEER, false);
            curl_setopt(\$curl_connection, CURLOPT_FOLLOWLOCATION, 1);
            curl_setopt(\$curl_connection, CURLOPT_POSTFIELDS, 
            	\"dbdump_compress=Y&\".
            	\"dbdump_schema=Y&\".
            	\"dbdump_data=Y&\"
       		);    
        	\$result = curl_exec(\$curl_connection);
    		curl_close(\$curl_connection);
       						
            ?>
        ");
        fclose($fh);

	    /*echo "<h1>Script generation</h1>";
	    echo "<a href='".dirname($_SERVER['SCRIPT_NAME'])."/addons/stagingsite/$myFile'>".dirname($_SERVER['SCRIPT_NAME'])."/addons/stagingsite/$myFile</a>";
	    foreach($_REQUEST as $key => $value)
    	{
    	    echo "<br>".$key." : ".$value;
    	}
    	
	    foreach($_REQUEST['dbdump_tables'] as $key => $value)
    	{
    	    echo "<br>".$key." : ".$value;
    	}*/
    	
    	fn_set_notification('E', fn_get_lang_var('notice'), "Staging site script generation is not implemented in this release. <p>Please email contact@sinclairtechnologysolutions.com to get an updated version that includes this feature.", "K");
		fn_stop_scroller();
	} 
	
	if ($mode == 'createstagingsitearchive') 
	{
		$_POST['sandbox_genTar'] = true;
		$mode = 'createstagingsite';
	}
	
	if ($mode == 'createstagingsite') 
	{
	    fn_define('DB_MAX_ROW_SIZE', 10000);
	    fn_define('DB_ROWS_PER_PASS', 40);
		fn_start_scroller();
	
		//check user db access
		include DIR_ROOT."/config.local.php";
		
		//if($_POST['sandbox_dbName']!=''){ $config['db_name']=$_POST['sandbox_dbName']; }
		
	    fn_echo("
            <style>         
                html, BODY { height: 100%; }
                div.pagewrapper { 
                	width: 100%; height: 100% overflow: auto; 
				}
                div.overlay {
                    position: fixed; right: 100px; bottom: 25px;
                    background: lightgrey;
                    font-family:Verdana, Geneva, sans-serif;
                }      
            </style> 	
			
            <div id='pagewrapper' class='pagewrapper'></div>
        	<div id='overlay' class='overlay'>...</div>        	 
	    ");
	    		
	    update_overlay("Starting up");
	    
		$sandbox_dirName = 'sandbox';
		if( isset($_REQUEST['sandbox_pathname']))
		{
		    $sandbox_dirName = $_REQUEST['sandbox_pathname'];
		}
		$sandbox_dbName = $sandbox_dirName;
	    if( $_REQUEST['sandbox_dbName']!="")
		{
		    $sandbox_dbName = $_REQUEST['sandbox_dbName'];
		}
		$sandbox_path = DIR_ROOT.'/'.$sandbox_dirName;
		
        //$link = mysql_connect($config['db_host'], $config['db_user'], $config['db_password']) or print(mysql_error());
        //mysql_select_db($config['db_name']) or die(mysql_error($link));	
						
        $mtime = microtime();
        $mtime = explode(" ",$mtime);
        $mtime = $mtime[1] + $mtime[0];
        $startTime = $mtime; 
		
		if($_REQUEST['sandbox_flushDir']=='Y')
		{
    		update_overlay("Flushing staging site directory<b>" .$sandbox_path."</b>");

    		append_to_page("<hr width=\"100%\" />");
    		
    		rrmdir($sandbox_path);
		}

		//create new directory to store stagingsite files
		mkdir($sandbox_path);
		update_overlay('Synching staging site files, this can take a very long time depending on your setup. ');
		
		
		$excludeDirs = array(
			"skins_repository",
			"$sandbox_dirName",
		    ".svn",
		    "StagingSiteFileBackup.tar.gz",
		    "StagingSiteDatabaseBackup.tar.gz",
		    "StagingSiteBackup.tar.gz"
		    
		);
	    
		//copy * from cart root to stagingsite directory
		copy_r(DIR_ROOT, $sandbox_path, $excludeDirs);

		$mtime = microtime();
        $mtime = explode(" ",$mtime);
        $mtime = $mtime[1] + $mtime[0];
        $endTime = $mtime; 
		$opTime = $endTime-$startTime;
		
		fn_stop_scroller();

	    update_overlay('Upgrading database <b>'. $sandbox_dbName. '</b>');
		
        include DIR_ROOT."/config.local.php";
        $link = mysql_connect($config['db_host'], $config['db_user'], $config['db_password']) or print(mysql_error());
        //mysql_select_db($sandbox_dbName) or die(mysql_error($link));
        
		//drop and create stagingsite db
    	mysql_query( "	DROP DATABASE `$sandbox_dbName`	" ) or $noDrop = mysql_error();
    	if ($noDrop) {
    		$exist = strstr($noDrop, 'database doesn\'t exist');
    		if (!$exist) $theError = 'You do not have DROP privelages for database ' . $sandbox_dbName . '. Please 
    		change the DB Name Override setting in the staging site options.<p>';
    	}
    	if (!$theError)
	    	mysql_query( "	CREATE DATABASE `$sandbox_dbName`	" ) or $theError = 'You do not have CREATE privelages for database ' . $sandbox_dbName . '. Please 
	    		change the DB Name Override setting in the staging site options.<p>';
    	
		$result = db_get_array( " SHOW GRANTS FOR CURRENT_USER " );
		$result = $result[0];
		
		/*
		$permissions = strstr(substr(strstr(print_r($result, true), '=> GRANT '), 9), ' ON ', true);
		$permissions = str_replace(', FILE', '', $permissions);
		$permissions = str_replace('FILE, ', '', $permissions);
		$permissions = str_replace('FILE', '', $permissions);
	    	
	    if (!$theError)
	    	mysql_query( "	GRANT ".$permissions." ON ".$sandbox_dbName.".* TO '".$config['db_user']."'@'%' WITH GRANT OPTION  	" ) or $noGrant = mysql_error();
	    if ($noGrant) {
    		print_r($noGrant);	    	
	    	$theError = 'You do not have the required privileges for database \'' . $sandbox_dbName . '\'. Please 
    			change the DB Name Override setting in the staging site options. Note, required privileges are: FILE (Global), GRANT, '.$permissions.'<p>';
	    }
    	
    	if ($theError) {
    		fn_set_notification('E', fn_get_lang_var('error'), $theError, "K");
			return array(CONTROLLER_STATUS_OK, "$index_script?dispatch=stagingsite.manage");
    	}*/
    	
    	//override settings in newly created sandbox directory so that this cart's db user can access the sandbox db
		$myFile = $sandbox_path."/config.local.php";
        $fh = fopen($myFile, 'a') or die("error: cannot open sandbox config.local.php for writing!");
        fwrite($fh, "
            <?php
            /** AUTOGENERATED code to override staging site settings. Do not manually edit!!! **/
            
            \$config['db_name'] = '$sandbox_dbName';												
            \$config['http_host'] = '".$_SERVER['SERVER_NAME']."';											
            \$config['http_path'] = '".dirname($_SERVER['SCRIPT_NAME'])."/$sandbox_dirName';
            \$config['https_host'] = '".$_SERVER['SERVER_NAME']."';											
            \$config['https_path'] = '".dirname($_SERVER['SCRIPT_NAME'])."/$sandbox_dirName'; 							
            ?>
        ");
        fclose($fh);

    	//backup current site's db
    	$tmp_filename = "stagingbackuptmp".".sql";
    	mysql_select_db($sandbox_dbName) or die(mysql_error($link));
    	backupDBtoFile($tmp_filename);
    	
		if ($_POST['sandbox_genTar']) {
    		//fn_start_scroller();
    		update_overlay("Creating archive of site files, this can take a very long time: <b>" . 'StagingSiteFileBackup.tar.gz' . "</b>");
	        unlink(DIR_ROOT."/install.php");
    		fn_compress_files(DIR_ROOT.'/StagingSiteFileBackup.tar.gz', $sandbox_dirName."/", DIR_ROOT);
    		
    		$fh = fopen(DIR_ROOT.'/install.php', 'w') or die("Error: Cannot open '" . DIR_ROOT.'/install.php' . "' for writing, please check permissions.");
	        fwrite($fh, "
	            <?php
	            /** AUTOGENERATED code. Do not manually edit!!! **/
	            
	            echo('Functionality not implemented yet. Please contact contact@sinclairtechnologysolutions.com for details.');
	            //fn_mkdir(".DIR_ROOT.");
	            fn_decompress_files('StagingSiteFileBackup.tar.gz');
	            db_import_sql_file_to_db('StagingSiteDatabaseBackup.tar.gz');
	       						
	            ?>
	        ");
	        fclose($fh);
    		update_overlay("Creating archive of site database, this can take a very long time: <b>" . 'StagingSiteDatabaseBackup.tar.gz' . "</b>");
	        //copy(DIR_DATABASE."backup/$tmp_filename.tgz", $sandbox_path."/var/database/backup/$tmp_filename.tgz");
	        copy(DIR_DATABASE."backup/$tmp_filename.tgz", DIR_ROOT."/StagingSiteDatabaseBackup.tar.gz");
    		update_overlay("Combining archives, this can take a very long time: <b>" . 'StagingSiteBackup.tar.gz' . "</b>");
    		fn_compress_files('StagingSiteBackup.tar.gz', array('StagingSiteDatabaseBackup.tar.gz', 'StagingSiteFileBackup.tar.gz', 'install.php'), DIR_ROOT);
	        unlink(DIR_ROOT."/StagingSiteDatabaseBackup.tar.gz");
    		unlink(DIR_ROOT.'/StagingSiteFileBackup.tar.gz');
    		unlink(DIR_ROOT.'/install.php');
    		//fn_stop_scroller();
    	}
    	
    	//copy to staging site backup dir
    	copy(DIR_DATABASE."backup/$tmp_filename.tgz", $sandbox_path."/var/database/backup/$tmp_filename.tgz");
    	
    	//import db backup into staging site db
    	fn_start_scroller();

		update_overlay( fn_get_lang_var('restoring_from') . ': <b>' . "$tmp_filename.tgz</b>" );
		if (strpos("$tmp_filename.tgz", '.tgz') !== false) {
			fn_decompress_files("$tmp_filename.tgz", $sandbox_path."/var/database/backup");
			$file = substr("$tmp_filename.tgz", 0, strpos("$tmp_filename.tgz", '.tgz'));
		}

		db_import_sql_file_to_db($sandbox_path."/var/database/backup/$tmp_filename", $sandbox_dbName);
		
		fn_stop_scroller();

		fn_rm(DIR_CACHE, false); // cleanup cache
		fn_echo("
            <script language='javascript'>
            document.getElementById('overlay').innerHTML='Completed successfully.';
            </script>"
        );
		
        //disable ssl on the sandbox as most ssl certs are for the main domain only and cause a redirect to the main site
        mysql_select_db($sandbox_dbName) or print(mysql_error($link));
    	mysql_query( "	UPDATE `$sandbox_dbName`.`cscart_settings` SET `value` = 'N' WHERE `cscart_settings`.`option_id` =10003	" ) or print(mysql_error()."<p>");
        mysql_query( "	UPDATE `$sandbox_dbName`.`cscart_settings` SET `value` = 'N' WHERE `cscart_settings`.`option_id` =10004	" ) or print(mysql_error()."<p>");
        
        $mtime = microtime();
        $mtime = explode(" ",$mtime);
        $mtime = $mtime[1] + $mtime[0];
        $endTime = $mtime; 
		$opTime = $endTime-$startTime;
        
	    fn_set_notification('N', fn_get_lang_var('notice'), "Staging site created at <b>".$sandbox_path."</b> in <b>". round($opTime, 2)."</b> seconds.<br> 
	    Take a look: <a href='".dirname($_SERVER['SCRIPT_NAME'])."/$sandbox_dirName'>Customer</a> <a href='".dirname($_SERVER['SCRIPT_NAME'])."/$sandbox_dirName/".$config['admin_index']."'>Admin</a>", "K");
		//die();
	} 
	exit;
	return array(CONTROLLER_STATUS_OK, "$index_script?dispatch=stagingsite.manage");
		
}
if ($mode == 'manage') 
	{
		// Calculate database size and fill tables array
		$status_data = db_get_array("SHOW TABLE STATUS");
		$database_size = 0;
		$all_tables = array();
		foreach ($status_data as $k => $v) {
			$database_size += $v['Data_length'] + $v['Index_length'];
			$all_tables[] = $v['Name'];
		}
		
	
		$view->assign('database_size', $database_size);
		$view->assign('all_tables', $all_tables);
	
		$files = fn_get_dir_contents(DIR_DATABASE . 'backup', false, true, array('.sql', '.tgz'));
		sort($files, SORT_STRING);
		$backup_files = array();
		if (is_array($files)) {
			foreach ($files as $file) {
				$backup_files[$file]['size'] = filesize(DIR_DATABASE . 'backup/' . $file);
				$backup_files[$file]['type'] = strpos($file, '.tgz')===false ? 'sql' : 'tgz';
			}
		}
	
		$view->assign('backup_files', $backup_files);
		$view->assign('backup_dir', DIR_DATABASE . 'backup/');
	}	


?>